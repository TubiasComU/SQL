create sequence costumers_seq;

create or replace procedure etl_dim_costumers is
cursor c_dim_costumers is
    select  c.CUST_ID,c.CUST_FIRST_NAME,c.CUST_LAST_NAME,c.CUST_MAIN_PHONE_NUMBER
    ,c.CUST_INCOME_LEVEL,c.CUST_EMAIL,coun.COUNTRY_NAME,city.CITY,costumers_seq.nextval sk
    from customers_oltp c, cities_oltp city, countries_oltp coun
    where c.CUST_CITY = city.CITY_ID
    and coun.COUNTRY_ID = (
        select COUNTRY 
        from state_provinces_oltp sp
        where city.STATE_PROVINCE = sp.STATE_PROVINCE_ID
    )
    and c.CUST_ID not in (
        select cust_id
        from costumers
    );
begin
    for v_reg_c_costumers in c_dim_costumers loop
        insert into costumers (Costumers_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_MAIN_PHONE_NUMBER
        ,CUST_INCOME_LEVEL,CUST_EMAIL,Country,City,Costumers_sk,mini_costumers_mini_c_sk)
        values (v_reg_c_costumers.CUST_ID,v_reg_c_costumers.CUST_FIRST_NAME,v_reg_c_costumers.CUST_LAST_NAME,
        v_reg_c_costumers.CUST_MAIN_PHONE_NUMBER,v_reg_c_costumers.CUST_INCOME_LEVEL,v_reg_c_costumers.CUST_EMAIL,
        v_reg_c_costumers.COUNTRY_NAME,v_reg_c_costumers.CITY,v_reg_c_costumers.sk,v_reg_c_costumers.sk);      
    end loop;
end;
/

exec etl_dim_costumers;

select count(*)from costumers;
select * from costumers;

--============================================

create sequence mini_c_seq;

create or replace procedure etl_minidim_mini_costumers is
begin
    insert into mini_costumers (mini_id,gama_income,val_min,val_max,mini_c_sk)
    select
        '1',
        SUBSTR(cust_income_level, 1, 1) AS gama_income,
        TO_NUMBER(REGEXP_SUBSTR(cust_income_level, '\d+', 1, 1)) AS val_min,
        TO_NUMBER(REGEXP_SUBSTR(cust_income_level, '\d+', 1, 3)) AS val_max,
        mini_c_seq.nextval
    from
    costumers;
end;
/

exec etl_minidim_mini_costumers;
